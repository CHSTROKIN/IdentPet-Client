Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useCreateMessageInputContext = void 0;
var _react = require("react");
var useCreateMessageInputContext = function useCreateMessageInputContext(_ref) {
  var additionalTextInputProps = _ref.additionalTextInputProps,
    appendText = _ref.appendText,
    asyncIds = _ref.asyncIds,
    asyncMessagesLockDistance = _ref.asyncMessagesLockDistance,
    asyncMessagesMinimumPressDuration = _ref.asyncMessagesMinimumPressDuration,
    asyncMessagesMultiSendEnabled = _ref.asyncMessagesMultiSendEnabled,
    asyncMessagesSlideToCancelDistance = _ref.asyncMessagesSlideToCancelDistance,
    asyncUploads = _ref.asyncUploads,
    AttachButton = _ref.AttachButton,
    AudioAttachmentUploadPreview = _ref.AudioAttachmentUploadPreview,
    AudioRecorder = _ref.AudioRecorder,
    audioRecordingEnabled = _ref.audioRecordingEnabled,
    AudioRecordingInProgress = _ref.AudioRecordingInProgress,
    AudioRecordingLockIndicator = _ref.AudioRecordingLockIndicator,
    AudioRecordingPreview = _ref.AudioRecordingPreview,
    AudioRecordingWaveform = _ref.AudioRecordingWaveform,
    autoCompleteSuggestionsLimit = _ref.autoCompleteSuggestionsLimit,
    clearEditingState = _ref.clearEditingState,
    clearQuotedMessageState = _ref.clearQuotedMessageState,
    closeAttachmentPicker = _ref.closeAttachmentPicker,
    CommandsButton = _ref.CommandsButton,
    compressImageQuality = _ref.compressImageQuality,
    cooldownEndsAt = _ref.cooldownEndsAt,
    CooldownTimer = _ref.CooldownTimer,
    disabled = _ref.disabled,
    doDocUploadRequest = _ref.doDocUploadRequest,
    doImageUploadRequest = _ref.doImageUploadRequest,
    editing = _ref.editing,
    editMessage = _ref.editMessage,
    emojiSearchIndex = _ref.emojiSearchIndex,
    FileUploadPreview = _ref.FileUploadPreview,
    fileUploads = _ref.fileUploads,
    giphyActive = _ref.giphyActive,
    hasCommands = _ref.hasCommands,
    hasFilePicker = _ref.hasFilePicker,
    hasImagePicker = _ref.hasImagePicker,
    ImageUploadPreview = _ref.ImageUploadPreview,
    imageUploads = _ref.imageUploads,
    initialValue = _ref.initialValue,
    Input = _ref.Input,
    inputBoxRef = _ref.inputBoxRef,
    InputButtons = _ref.InputButtons,
    InputEditingStateHeader = _ref.InputEditingStateHeader,
    InputGiphySearch = _ref.InputGiphySearch,
    InputReplyStateHeader = _ref.InputReplyStateHeader,
    isValidMessage = _ref.isValidMessage,
    maxMessageLength = _ref.maxMessageLength,
    maxNumberOfFiles = _ref.maxNumberOfFiles,
    mentionAllAppUsersEnabled = _ref.mentionAllAppUsersEnabled,
    mentionAllAppUsersQuery = _ref.mentionAllAppUsersQuery,
    mentionedUsers = _ref.mentionedUsers,
    MoreOptionsButton = _ref.MoreOptionsButton,
    numberOfLines = _ref.numberOfLines,
    numberOfUploads = _ref.numberOfUploads,
    onChange = _ref.onChange,
    onChangeText = _ref.onChangeText,
    onSelectItem = _ref.onSelectItem,
    openAttachmentPicker = _ref.openAttachmentPicker,
    openCommandsPicker = _ref.openCommandsPicker,
    openFilePicker = _ref.openFilePicker,
    openMentionsPicker = _ref.openMentionsPicker,
    pickFile = _ref.pickFile,
    quotedMessage = _ref.quotedMessage,
    removeFile = _ref.removeFile,
    removeImage = _ref.removeImage,
    resetInput = _ref.resetInput,
    selectedPicker = _ref.selectedPicker,
    SendButton = _ref.SendButton,
    sendImageAsync = _ref.sendImageAsync,
    sending = _ref.sending,
    sendMessage = _ref.sendMessage,
    sendMessageAsync = _ref.sendMessageAsync,
    SendMessageDisallowedIndicator = _ref.SendMessageDisallowedIndicator,
    sendThreadMessageInChannel = _ref.sendThreadMessageInChannel,
    setAsyncIds = _ref.setAsyncIds,
    setAsyncUploads = _ref.setAsyncUploads,
    setFileUploads = _ref.setFileUploads,
    setGiphyActive = _ref.setGiphyActive,
    setImageUploads = _ref.setImageUploads,
    setInputBoxRef = _ref.setInputBoxRef,
    setInputRef = _ref.setInputRef,
    setMentionedUsers = _ref.setMentionedUsers,
    setNumberOfUploads = _ref.setNumberOfUploads,
    setQuotedMessageState = _ref.setQuotedMessageState,
    setSendThreadMessageInChannel = _ref.setSendThreadMessageInChannel,
    setShowMoreOptions = _ref.setShowMoreOptions,
    setText = _ref.setText,
    showMoreOptions = _ref.showMoreOptions,
    ShowThreadMessageInChannelButton = _ref.ShowThreadMessageInChannelButton,
    StartAudioRecordingButton = _ref.StartAudioRecordingButton,
    text = _ref.text,
    thread = _ref.thread,
    toggleAttachmentPicker = _ref.toggleAttachmentPicker,
    triggerSettings = _ref.triggerSettings,
    updateMessage = _ref.updateMessage,
    uploadFile = _ref.uploadFile,
    uploadImage = _ref.uploadImage,
    uploadNewFile = _ref.uploadNewFile,
    uploadNewImage = _ref.uploadNewImage,
    UploadProgressIndicator = _ref.UploadProgressIndicator;
  var editingdep = editing == null ? void 0 : editing.id;
  var fileUploadsValue = fileUploads.map(function (_ref2) {
    var duration = _ref2.duration,
      paused = _ref2.paused,
      progress = _ref2.progress,
      state = _ref2.state;
    return "".concat(state, ",").concat(paused, ",").concat(progress, ",").concat(duration);
  }).join();
  var imageUploadsValue = imageUploads.map(function (_ref3) {
    var state = _ref3.state;
    return state;
  }).join();
  var asyncUploadsValue = Object.keys(asyncUploads).join();
  var mentionedUsersLength = mentionedUsers.length;
  var quotedMessageId = quotedMessage ? typeof quotedMessage === 'boolean' ? '' : quotedMessage.id : '';
  var threadId = thread == null ? void 0 : thread.id;
  var asyncIdsLength = asyncIds.length;
  var messageInputContext = (0, _react.useMemo)(function () {
    return {
      additionalTextInputProps: additionalTextInputProps,
      appendText: appendText,
      asyncIds: asyncIds,
      asyncMessagesLockDistance: asyncMessagesLockDistance,
      asyncMessagesMinimumPressDuration: asyncMessagesMinimumPressDuration,
      asyncMessagesMultiSendEnabled: asyncMessagesMultiSendEnabled,
      asyncMessagesSlideToCancelDistance: asyncMessagesSlideToCancelDistance,
      asyncUploads: asyncUploads,
      AttachButton: AttachButton,
      AudioAttachmentUploadPreview: AudioAttachmentUploadPreview,
      AudioRecorder: AudioRecorder,
      audioRecordingEnabled: audioRecordingEnabled,
      AudioRecordingInProgress: AudioRecordingInProgress,
      AudioRecordingLockIndicator: AudioRecordingLockIndicator,
      AudioRecordingPreview: AudioRecordingPreview,
      AudioRecordingWaveform: AudioRecordingWaveform,
      autoCompleteSuggestionsLimit: autoCompleteSuggestionsLimit,
      clearEditingState: clearEditingState,
      clearQuotedMessageState: clearQuotedMessageState,
      closeAttachmentPicker: closeAttachmentPicker,
      CommandsButton: CommandsButton,
      compressImageQuality: compressImageQuality,
      cooldownEndsAt: cooldownEndsAt,
      CooldownTimer: CooldownTimer,
      disabled: disabled,
      doDocUploadRequest: doDocUploadRequest,
      doImageUploadRequest: doImageUploadRequest,
      editing: editing,
      editMessage: editMessage,
      emojiSearchIndex: emojiSearchIndex,
      FileUploadPreview: FileUploadPreview,
      fileUploads: fileUploads,
      giphyActive: giphyActive,
      hasCommands: hasCommands,
      hasFilePicker: hasFilePicker,
      hasImagePicker: hasImagePicker,
      ImageUploadPreview: ImageUploadPreview,
      imageUploads: imageUploads,
      initialValue: initialValue,
      Input: Input,
      inputBoxRef: inputBoxRef,
      InputButtons: InputButtons,
      InputEditingStateHeader: InputEditingStateHeader,
      InputGiphySearch: InputGiphySearch,
      InputReplyStateHeader: InputReplyStateHeader,
      isValidMessage: isValidMessage,
      maxMessageLength: maxMessageLength,
      maxNumberOfFiles: maxNumberOfFiles,
      mentionAllAppUsersEnabled: mentionAllAppUsersEnabled,
      mentionAllAppUsersQuery: mentionAllAppUsersQuery,
      mentionedUsers: mentionedUsers,
      MoreOptionsButton: MoreOptionsButton,
      numberOfLines: numberOfLines,
      numberOfUploads: numberOfUploads,
      onChange: onChange,
      onChangeText: onChangeText,
      onSelectItem: onSelectItem,
      openAttachmentPicker: openAttachmentPicker,
      openCommandsPicker: openCommandsPicker,
      openFilePicker: openFilePicker,
      openMentionsPicker: openMentionsPicker,
      pickFile: pickFile,
      quotedMessage: quotedMessage,
      removeFile: removeFile,
      removeImage: removeImage,
      resetInput: resetInput,
      selectedPicker: selectedPicker,
      SendButton: SendButton,
      sendImageAsync: sendImageAsync,
      sending: sending,
      sendMessage: sendMessage,
      sendMessageAsync: sendMessageAsync,
      SendMessageDisallowedIndicator: SendMessageDisallowedIndicator,
      sendThreadMessageInChannel: sendThreadMessageInChannel,
      setAsyncIds: setAsyncIds,
      setAsyncUploads: setAsyncUploads,
      setFileUploads: setFileUploads,
      setGiphyActive: setGiphyActive,
      setImageUploads: setImageUploads,
      setInputBoxRef: setInputBoxRef,
      setInputRef: setInputRef,
      setMentionedUsers: setMentionedUsers,
      setNumberOfUploads: setNumberOfUploads,
      setQuotedMessageState: setQuotedMessageState,
      setSendThreadMessageInChannel: setSendThreadMessageInChannel,
      setShowMoreOptions: setShowMoreOptions,
      setText: setText,
      showMoreOptions: showMoreOptions,
      ShowThreadMessageInChannelButton: ShowThreadMessageInChannelButton,
      StartAudioRecordingButton: StartAudioRecordingButton,
      text: text,
      toggleAttachmentPicker: toggleAttachmentPicker,
      triggerSettings: triggerSettings,
      updateMessage: updateMessage,
      uploadFile: uploadFile,
      uploadImage: uploadImage,
      uploadNewFile: uploadNewFile,
      uploadNewImage: uploadNewImage,
      UploadProgressIndicator: UploadProgressIndicator
    };
  }, [asyncIdsLength, asyncUploadsValue, cooldownEndsAt, disabled, editingdep, fileUploadsValue, giphyActive, imageUploadsValue, maxMessageLength, mentionedUsersLength, quotedMessageId, selectedPicker, sendThreadMessageInChannel, showMoreOptions, text, threadId]);
  return messageInputContext;
};
exports.useCreateMessageInputContext = useCreateMessageInputContext;
//# sourceMappingURL=useCreateMessageInputContext.js.map