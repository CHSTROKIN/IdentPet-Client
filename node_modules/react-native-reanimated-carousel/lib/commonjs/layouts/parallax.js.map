{"version":3,"sources":["parallax.ts"],"names":["parallaxLayout","baseConfig","modeConfig","size","vertical","parallaxScrollingOffset","parallaxScrollingScale","parallaxAdjacentItemScale","value","translate","zIndex","Extrapolate","CLAMP","scale","transform","translateY","translateX","interpolate"],"mappings":"+FAAA,8D,slEAmCO,QAASA,CAAAA,cAAT,CACLC,UADK,CAGL,IADAC,CAAAA,UACA,2DAD4B,EAC5B,CACA,GAAQC,CAAAA,IAAR,CAA2BF,UAA3B,CAAQE,IAAR,CAAcC,QAAd,CAA2BH,UAA3B,CAAcG,QAAd,CACA,0BAIIF,UAJJ,CACEG,uBADF,CACEA,uBADF,gCAC4B,GAD5B,8CAIIH,UAJJ,CAEEI,sBAFF,CAEEA,sBAFF,iCAE2B,GAF3B,8CAIIJ,UAJJ,CAGEK,yBAHF,CAGEA,yBAHF,gCAG8BD,sBAAsB,EAAI,CAHxD,uBAMA,wEAAQE,KAAR,CAA0B,CAExB,GAAMC,CAAAA,SAAS,CAAG,uCAChBD,KADgB,CAEhB,CAAC,CAAC,CAAF,CAAK,CAAL,CAAQ,CAAR,CAFgB,CAGhB,CAAC,CAACL,IAAD,CAAQE,uBAAT,CAAkC,CAAlC,CAAqCF,IAAI,CAAGE,uBAA5C,CAHgB,CAAlB,CAMA,GAAMK,CAAAA,MAAM,CAAG,uCACbF,KADa,CAEb,CAAC,CAAC,CAAF,CAAK,CAAL,CAAQ,CAAR,CAFa,CAGb,CAAC,CAAD,CAAIL,IAAJ,CAAU,CAAV,CAHa,CAIbQ,mCAAYC,KAJC,CAAf,CAOA,GAAMC,CAAAA,KAAK,CAAG,uCACZL,KADY,CAEZ,CAAC,CAAC,CAAF,CAAK,CAAL,CAAQ,CAAR,CAFY,CAGZ,CACED,yBADF,CAEED,sBAFF,CAGEC,yBAHF,CAHY,CAQZI,mCAAYC,KARA,CAAd,CAWA,MAAO,CACLE,SAAS,CAAE,CACTV,QAAQ,CACJ,CACAW,UAAU,CAAEN,SADZ,CADI,CAIJ,CACAO,UAAU,CAAEP,SADZ,CALK,CAQT,CACEI,KAAK,CAALA,KADF,CARS,CADN,CAaLH,MAAM,CAANA,MAbK,CAAP,CAeD,CAzCD,0BA3CcO,kCA2Cd,MA5CkDd,IA4ClD,yBA7C6FE,uBA6C7F,aA3C6HM,kCA2C7H,2BA3CiGJ,yBA2CjG,wBA3CyED,sBA2CzE,UAzCcF,QAyCd,wIA0CD","sourcesContent":["import { Extrapolate, interpolate } from \"react-native-reanimated\";\n\nimport type { IComputedDirectionTypes } from \"../types\";\n\ninterface TBaseConfig {\n  size: number\n  vertical: boolean\n}\n\nexport interface ILayoutConfig {\n  /**\n     * control prev/next item offset.\n     * @default 100\n     */\n  parallaxScrollingOffset?: number\n  /**\n     * control prev/current/next item offset.\n     * @default 0.8\n     */\n  parallaxScrollingScale?: number\n  /**\n     * control prev/next item offset.\n     * @default Math.pow(parallaxScrollingScale, 2)\n     */\n  parallaxAdjacentItemScale?: number\n}\n\nexport type TParallaxModeProps = IComputedDirectionTypes<{\n  /**\n     * Carousel Animated transitions.\n     */\n  mode?: \"parallax\"\n  modeConfig?: ILayoutConfig\n}>;\n\nexport function parallaxLayout(\n  baseConfig: TBaseConfig,\n  modeConfig: ILayoutConfig = {},\n) {\n  const { size, vertical } = baseConfig;\n  const {\n    parallaxScrollingOffset = 100,\n    parallaxScrollingScale = 0.8,\n    parallaxAdjacentItemScale = parallaxScrollingScale ** 2,\n  } = modeConfig;\n\n  return (value: number) => {\n    \"worklet\";\n    const translate = interpolate(\n      value,\n      [-1, 0, 1],\n      [-size + parallaxScrollingOffset, 0, size - parallaxScrollingOffset],\n    );\n\n    const zIndex = interpolate(\n      value,\n      [-1, 0, 1],\n      [0, size, 0],\n      Extrapolate.CLAMP,\n    );\n\n    const scale = interpolate(\n      value,\n      [-1, 0, 1],\n      [\n        parallaxAdjacentItemScale,\n        parallaxScrollingScale,\n        parallaxAdjacentItemScale,\n      ],\n      Extrapolate.CLAMP,\n    );\n\n    return {\n      transform: [\n        vertical\n          ? {\n            translateY: translate,\n          }\n          : {\n            translateX: translate,\n          },\n        {\n          scale,\n        },\n      ],\n      zIndex,\n    };\n  };\n}\n"]}