Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useCreateMessagesContext = void 0;
var _react = require("react");
var useCreateMessagesContext = function useCreateMessagesContext(_ref) {
  var additionalTouchableProps = _ref.additionalTouchableProps,
    Attachment = _ref.Attachment,
    AttachmentActions = _ref.AttachmentActions,
    AudioAttachment = _ref.AudioAttachment,
    Card = _ref.Card,
    CardCover = _ref.CardCover,
    CardFooter = _ref.CardFooter,
    CardHeader = _ref.CardHeader,
    channelId = _ref.channelId,
    DateHeader = _ref.DateHeader,
    deletedMessagesVisibilityType = _ref.deletedMessagesVisibilityType,
    deleteMessage = _ref.deleteMessage,
    deleteReaction = _ref.deleteReaction,
    disableTypingIndicator = _ref.disableTypingIndicator,
    dismissKeyboardOnMessageTouch = _ref.dismissKeyboardOnMessageTouch,
    enableMessageGroupingByUser = _ref.enableMessageGroupingByUser,
    FileAttachment = _ref.FileAttachment,
    FileAttachmentGroup = _ref.FileAttachmentGroup,
    FileAttachmentIcon = _ref.FileAttachmentIcon,
    FlatList = _ref.FlatList,
    forceAlignMessages = _ref.forceAlignMessages,
    Gallery = _ref.Gallery,
    getMessagesGroupStyles = _ref.getMessagesGroupStyles,
    Giphy = _ref.Giphy,
    giphyVersion = _ref.giphyVersion,
    handleBlock = _ref.handleBlock,
    handleCopy = _ref.handleCopy,
    handleDelete = _ref.handleDelete,
    handleEdit = _ref.handleEdit,
    handleFlag = _ref.handleFlag,
    handleMute = _ref.handleMute,
    handlePinMessage = _ref.handlePinMessage,
    handleQuotedReply = _ref.handleQuotedReply,
    handleReaction = _ref.handleReaction,
    handleRetry = _ref.handleRetry,
    handleThreadReply = _ref.handleThreadReply,
    ImageLoadingFailedIndicator = _ref.ImageLoadingFailedIndicator,
    ImageLoadingIndicator = _ref.ImageLoadingIndicator,
    initialScrollToFirstUnreadMessage = _ref.initialScrollToFirstUnreadMessage,
    InlineDateSeparator = _ref.InlineDateSeparator,
    InlineUnreadIndicator = _ref.InlineUnreadIndicator,
    isAttachmentEqual = _ref.isAttachmentEqual,
    legacyImageViewerSwipeBehaviour = _ref.legacyImageViewerSwipeBehaviour,
    markdownRules = _ref.markdownRules,
    Message = _ref.Message,
    messageActions = _ref.messageActions,
    MessageAvatar = _ref.MessageAvatar,
    MessageBounce = _ref.MessageBounce,
    MessageContent = _ref.MessageContent,
    messageContentOrder = _ref.messageContentOrder,
    MessageDeleted = _ref.MessageDeleted,
    MessageEditedTimestamp = _ref.MessageEditedTimestamp,
    MessageError = _ref.MessageError,
    MessageFooter = _ref.MessageFooter,
    MessageHeader = _ref.MessageHeader,
    MessageList = _ref.MessageList,
    MessagePinnedHeader = _ref.MessagePinnedHeader,
    MessageReplies = _ref.MessageReplies,
    MessageRepliesAvatars = _ref.MessageRepliesAvatars,
    MessageSimple = _ref.MessageSimple,
    MessageStatus = _ref.MessageStatus,
    MessageSystem = _ref.MessageSystem,
    MessageText = _ref.MessageText,
    myMessageTheme = _ref.myMessageTheme,
    onLongPressMessage = _ref.onLongPressMessage,
    onPressInMessage = _ref.onPressInMessage,
    onPressMessage = _ref.onPressMessage,
    OverlayReactionList = _ref.OverlayReactionList,
    ReactionList = _ref.ReactionList,
    removeMessage = _ref.removeMessage,
    Reply = _ref.Reply,
    retrySendMessage = _ref.retrySendMessage,
    ScrollToBottomButton = _ref.ScrollToBottomButton,
    selectReaction = _ref.selectReaction,
    sendReaction = _ref.sendReaction,
    setEditingState = _ref.setEditingState,
    setQuotedMessageState = _ref.setQuotedMessageState,
    supportedReactions = _ref.supportedReactions,
    targetedMessage = _ref.targetedMessage,
    TypingIndicator = _ref.TypingIndicator,
    TypingIndicatorContainer = _ref.TypingIndicatorContainer,
    updateMessage = _ref.updateMessage,
    UrlPreview = _ref.UrlPreview,
    VideoThumbnail = _ref.VideoThumbnail;
  var additionalTouchablePropsLength = Object.keys(additionalTouchableProps || {}).length;
  var markdownRulesLength = Object.keys(markdownRules || {}).length;
  var messageContentOrderValue = messageContentOrder.join();
  var supportedReactionsLength = supportedReactions.length;
  var messagesContext = (0, _react.useMemo)(function () {
    return {
      additionalTouchableProps: additionalTouchableProps,
      Attachment: Attachment,
      AttachmentActions: AttachmentActions,
      AudioAttachment: AudioAttachment,
      Card: Card,
      CardCover: CardCover,
      CardFooter: CardFooter,
      CardHeader: CardHeader,
      DateHeader: DateHeader,
      deletedMessagesVisibilityType: deletedMessagesVisibilityType,
      deleteMessage: deleteMessage,
      deleteReaction: deleteReaction,
      disableTypingIndicator: disableTypingIndicator,
      dismissKeyboardOnMessageTouch: dismissKeyboardOnMessageTouch,
      enableMessageGroupingByUser: enableMessageGroupingByUser,
      FileAttachment: FileAttachment,
      FileAttachmentGroup: FileAttachmentGroup,
      FileAttachmentIcon: FileAttachmentIcon,
      FlatList: FlatList,
      forceAlignMessages: forceAlignMessages,
      Gallery: Gallery,
      getMessagesGroupStyles: getMessagesGroupStyles,
      Giphy: Giphy,
      giphyVersion: giphyVersion,
      handleBlock: handleBlock,
      handleCopy: handleCopy,
      handleDelete: handleDelete,
      handleEdit: handleEdit,
      handleFlag: handleFlag,
      handleMute: handleMute,
      handlePinMessage: handlePinMessage,
      handleQuotedReply: handleQuotedReply,
      handleReaction: handleReaction,
      handleRetry: handleRetry,
      handleThreadReply: handleThreadReply,
      ImageLoadingFailedIndicator: ImageLoadingFailedIndicator,
      ImageLoadingIndicator: ImageLoadingIndicator,
      initialScrollToFirstUnreadMessage: initialScrollToFirstUnreadMessage,
      InlineDateSeparator: InlineDateSeparator,
      InlineUnreadIndicator: InlineUnreadIndicator,
      isAttachmentEqual: isAttachmentEqual,
      legacyImageViewerSwipeBehaviour: legacyImageViewerSwipeBehaviour,
      markdownRules: markdownRules,
      Message: Message,
      messageActions: messageActions,
      MessageAvatar: MessageAvatar,
      MessageBounce: MessageBounce,
      MessageContent: MessageContent,
      messageContentOrder: messageContentOrder,
      MessageDeleted: MessageDeleted,
      MessageEditedTimestamp: MessageEditedTimestamp,
      MessageError: MessageError,
      MessageFooter: MessageFooter,
      MessageHeader: MessageHeader,
      MessageList: MessageList,
      MessagePinnedHeader: MessagePinnedHeader,
      MessageReplies: MessageReplies,
      MessageRepliesAvatars: MessageRepliesAvatars,
      MessageSimple: MessageSimple,
      MessageStatus: MessageStatus,
      MessageSystem: MessageSystem,
      MessageText: MessageText,
      myMessageTheme: myMessageTheme,
      onLongPressMessage: onLongPressMessage,
      onPressInMessage: onPressInMessage,
      onPressMessage: onPressMessage,
      OverlayReactionList: OverlayReactionList,
      ReactionList: ReactionList,
      removeMessage: removeMessage,
      Reply: Reply,
      retrySendMessage: retrySendMessage,
      ScrollToBottomButton: ScrollToBottomButton,
      selectReaction: selectReaction,
      sendReaction: sendReaction,
      setEditingState: setEditingState,
      setQuotedMessageState: setQuotedMessageState,
      supportedReactions: supportedReactions,
      targetedMessage: targetedMessage,
      TypingIndicator: TypingIndicator,
      TypingIndicatorContainer: TypingIndicatorContainer,
      updateMessage: updateMessage,
      UrlPreview: UrlPreview,
      VideoThumbnail: VideoThumbnail
    };
  }, [additionalTouchablePropsLength, channelId, disableTypingIndicator, dismissKeyboardOnMessageTouch, initialScrollToFirstUnreadMessage, markdownRulesLength, messageContentOrderValue, supportedReactionsLength, myMessageTheme, targetedMessage]);
  return messagesContext;
};
exports.useCreateMessagesContext = useCreateMessagesContext;
//# sourceMappingURL=useCreateMessagesContext.js.map