{"version":3,"sources":["useCarouselController.tsx"],"names":["React","useRef","runOnJS","useAnimatedReaction","useSharedValue","Easing","computedRealIndexWithAutoFillData","convertToSharedIndex","dealWithAnimation","handlerOffsetDirection","round","useCarouselController","options","size","loop","dataLength","handlerOffset","withAnimation","defaultIndex","duration","autoFillData","dataInfo","useMemo","length","disable","originalLength","index","sharedIndex","sharedPreIndex","currentFixedPage","useCallback","Math","value","fixed","abs","setSharedIndex","newSharedIndex","current","handlerOffsetValue","toInt","isPositive","i","newSharedIndexValue","rawDataLength","getCurrentIndex","realIndex","canSliding","onScrollEnd","onScrollBegin","scrollWithTiming","toValue","onFinished","callback","isFinished","defaultWithAnimation","type","config","easing","easeOutQuart","next","opts","count","animated","nextPage","prev","prevPage","to","direction","offset","totalSize","isCloseToNextLoop","finalOffset","floor","scrollTo","n","getSharedIndex"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport type Animated from \"react-native-reanimated\";\nimport {\n  runOnJS,\n  useAnimatedReaction,\n  useSharedValue,\n} from \"react-native-reanimated\";\n\nimport { Easing } from \"../constants\";\nimport type {\n  TCarouselActionOptions,\n  TCarouselProps,\n  WithTimingAnimation,\n} from \"../types\";\nimport { computedRealIndexWithAutoFillData, convertToSharedIndex } from \"../utils/computedWithAutoFillData\";\nimport { dealWithAnimation } from \"../utils/dealWithAnimation\";\nimport { handlerOffsetDirection } from \"../utils/handlerOffsetDirection\";\nimport { round } from \"../utils/log\";\n\ninterface IOpts {\n  loop: boolean\n  size: number\n  dataLength: number\n  autoFillData: TCarouselProps[\"autoFillData\"]\n  handlerOffset: Animated.SharedValue<number>\n  withAnimation?: TCarouselProps[\"withAnimation\"]\n  duration?: number\n  defaultIndex?: number\n  onScrollBegin?: () => void\n  onScrollEnd?: () => void\n}\n\nexport interface ICarouselController {\n  getSharedIndex: () => number\n  prev: (opts?: TCarouselActionOptions) => void\n  next: (opts?: TCarouselActionOptions) => void\n  getCurrentIndex: () => number\n  scrollTo: (opts?: TCarouselActionOptions) => void\n}\n\nexport function useCarouselController(options: IOpts): ICarouselController {\n  const {\n    size,\n    loop,\n    dataLength,\n    handlerOffset,\n    withAnimation,\n    defaultIndex = 0,\n    duration,\n    autoFillData,\n  } = options;\n\n  const dataInfo = React.useMemo(\n    () => ({\n      length: dataLength,\n      disable: !dataLength,\n      originalLength: dataLength,\n    }),\n    [dataLength],\n  );\n\n  const index = useSharedValue<number>(defaultIndex);\n  // The Index displayed to the user\n  const sharedIndex = useRef<number>(defaultIndex);\n  const sharedPreIndex = useRef<number>(defaultIndex);\n\n  const currentFixedPage = React.useCallback(() => {\n    if (loop)\n      return -Math.round(handlerOffset.value / size);\n\n    const fixed = (handlerOffset.value / size) % dataInfo.length;\n    return Math.round(\n      handlerOffset.value <= 0\n        ? Math.abs(fixed)\n        : Math.abs(fixed > 0 ? dataInfo.length - fixed : 0),\n    );\n  }, [handlerOffset, dataInfo, size, loop]);\n\n  function setSharedIndex(newSharedIndex: number) {\n    sharedIndex.current = newSharedIndex;\n  }\n\n  useAnimatedReaction(\n    () => {\n      const handlerOffsetValue = handlerOffset.value;\n      const toInt = round(handlerOffsetValue / size) % dataInfo.length;\n      const isPositive = handlerOffsetValue <= 0;\n      const i = isPositive\n        ? Math.abs(toInt)\n        : Math.abs(toInt > 0 ? dataInfo.length - toInt : 0);\n\n      const newSharedIndexValue = convertToSharedIndex({\n        loop,\n        rawDataLength: dataInfo.originalLength,\n        autoFillData: autoFillData!,\n        index: i,\n      });\n\n      return {\n        i,\n        newSharedIndexValue,\n      };\n    },\n    ({ i, newSharedIndexValue }) => {\n      index.value = i;\n      runOnJS(setSharedIndex)(newSharedIndexValue);\n    },\n    [\n      sharedPreIndex,\n      sharedIndex,\n      size,\n      dataInfo,\n      index,\n      loop,\n      autoFillData,\n      handlerOffset,\n    ],\n  );\n\n  const getCurrentIndex = React.useCallback(() => {\n    const realIndex = computedRealIndexWithAutoFillData({\n      index: index.value,\n      dataLength: dataInfo.originalLength,\n      loop,\n      autoFillData: autoFillData!,\n    });\n\n    return realIndex;\n  }, [index, autoFillData, dataInfo, loop]);\n\n  const canSliding = React.useCallback(() => {\n    return !dataInfo.disable;\n  }, [dataInfo]);\n\n  const onScrollEnd = React.useCallback(() => {\n    options.onScrollEnd?.();\n  }, [options]);\n\n  const onScrollBegin = React.useCallback(() => {\n    options.onScrollBegin?.();\n  }, [options]);\n\n  const scrollWithTiming = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const callback = (isFinished: boolean) => {\n        \"worklet\";\n        if (isFinished) {\n          runOnJS(onScrollEnd)();\n          onFinished && runOnJS(onFinished)();\n        }\n      };\n\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: { duration, easing: Easing.easeOutQuart },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n        toValue,\n        callback,\n      );\n    },\n    [duration, withAnimation, onScrollEnd],\n  );\n\n  const next = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      \"worklet\";\n      const { count = 1, animated = true, onFinished } = opts;\n      if (!canSliding() || (!loop && index.value >= dataInfo.length - 1))\n        return;\n\n      onScrollBegin?.();\n\n      const nextPage = currentFixedPage() + count;\n      index.value = nextPage;\n\n      if (animated) {\n        handlerOffset.value = scrollWithTiming(\n          -nextPage * size,\n          onFinished,\n        ) as any;\n      }\n      else {\n        handlerOffset.value = -nextPage * size;\n        onFinished?.();\n      }\n    },\n    [\n      canSliding,\n      loop,\n      index,\n      dataInfo,\n      onScrollBegin,\n      handlerOffset,\n      size,\n      scrollWithTiming,\n      currentFixedPage,\n    ],\n  );\n\n  const prev = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      const { count = 1, animated = true, onFinished } = opts;\n      if (!canSliding() || (!loop && index.value <= 0)) return;\n\n      onScrollBegin?.();\n\n      const prevPage = currentFixedPage() - count;\n      index.value = prevPage;\n\n      if (animated) {\n        handlerOffset.value = scrollWithTiming(\n          -prevPage * size,\n          onFinished,\n        );\n      }\n      else {\n        handlerOffset.value = -prevPage * size;\n        onFinished?.();\n      }\n    },\n    [\n      canSliding,\n      loop,\n      index,\n      onScrollBegin,\n      handlerOffset,\n      size,\n      scrollWithTiming,\n      currentFixedPage,\n    ],\n  );\n\n  const to = React.useCallback(\n    (opts: { i: number; animated: boolean; onFinished?: () => void }) => {\n      const { i, animated = false, onFinished } = opts;\n      if (i === index.value) return;\n      if (!canSliding()) return;\n\n      onScrollBegin?.();\n      // direction -> 1 | -1\n      const direction = handlerOffsetDirection(handlerOffset);\n\n      // target offset\n      const offset = i * size * direction;\n      // page width size * page count\n      const totalSize = dataInfo.length * size;\n\n      let isCloseToNextLoop = false;\n\n      if (loop) {\n        isCloseToNextLoop\n                    = Math.abs(handlerOffset.value % totalSize) / totalSize\n                    >= 0.5;\n      }\n\n      const finalOffset\n                = (Math.floor(Math.abs(handlerOffset.value / totalSize))\n                    + (isCloseToNextLoop ? 1 : 0))\n                    * totalSize\n                    * direction\n                + offset;\n\n      if (animated) {\n        index.value = i;\n        handlerOffset.value = scrollWithTiming(finalOffset, onFinished);\n      }\n      else {\n        handlerOffset.value = finalOffset;\n        index.value = i;\n        onFinished?.();\n      }\n    },\n    [\n      index,\n      canSliding,\n      onScrollBegin,\n      handlerOffset,\n      size,\n      dataInfo.length,\n      loop,\n      scrollWithTiming,\n    ],\n  );\n\n  const scrollTo = React.useCallback(\n    (opts: TCarouselActionOptions = {}) => {\n      const { index: i, count, animated = false, onFinished } = opts;\n      if (typeof i === \"number\" && i > -1) {\n        to({ i, animated, onFinished });\n        return;\n      }\n\n      if (!count)\n        return;\n\n      const n = Math.round(count);\n\n      if (n < 0)\n        prev({ count: Math.abs(n), animated, onFinished });\n\n      else\n        next({ count: n, animated, onFinished });\n    },\n    [prev, next, to],\n  );\n\n  return {\n    next,\n    prev,\n    scrollTo,\n    getCurrentIndex,\n    getSharedIndex: () => sharedIndex.current,\n  };\n}\n"]}