Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDateString = getDateString;
exports.noParsingFunctionWarning = void 0;
var _TranslationContext = require("../contexts/translationContext/TranslationContext");
var noParsingFunctionWarning = 'MessageTimestamp was called but there is no datetime parsing function available';
exports.noParsingFunctionWarning = noParsingFunctionWarning;
function getDateString(_ref) {
  var calendar = _ref.calendar,
    date = _ref.date,
    format = _ref.format,
    formatDate = _ref.formatDate,
    tDateTimeParser = _ref.tDateTimeParser;
  if (!date || typeof date === 'string' && !Date.parse(date)) {
    return;
  }
  if (typeof formatDate === 'function') {
    return formatDate(new Date(date));
  }
  if (!tDateTimeParser) {
    console.log(noParsingFunctionWarning);
    return;
  }
  var parsedTime = tDateTimeParser(date);
  if ((0, _TranslationContext.isDayOrMoment)(parsedTime)) {
    return calendar && parsedTime.calendar ? parsedTime.calendar() : parsedTime.format(format);
  }
  return new Date(date).toDateString();
}
//# sourceMappingURL=getDateString.js.map